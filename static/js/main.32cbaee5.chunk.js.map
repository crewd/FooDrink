{"version":3,"sources":["img/main.jpg","img/about-1.jpg","img/github-icon.png","Nav.js","Home.js","About.js","ContactUsForm.js","ContactUs.js","Footer.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","MenuBtn","styled","button","Nav","useState","navColor","setnavColor","window","addEventListener","scrollY","menu","setMenu","Header","nav","NavBar","div","NavUl","ul","onClick","TextDiv","mainImage","ColorOverlay","StartBtn","Home","sectionStyle","width","display","justifyContent","articleStyle","Container","TitleImg","img","About","style","src","topImg","CUform","InputText","input","attrs","type","InputEmail","TextArea","textarea","ContactUsForm","maxLength","ContactUsSection","section","DownArow","span","ContactUs","setCUform","console","log","FooterDiv","GitIcon","Footer","href","target","gitImg","GlobalStyle","createGlobalStyle","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.32cbaee5.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/main.ce02215e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/about-1.5f6870ce.jpg\";","module.exports = __webpack_public_path__ + \"static/media/github-icon.fbddf5fd.png\";","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\nfunction Nav() {\r\n  const [navColor, setnavColor] = useState(false);\r\n\r\n  window.addEventListener(\"scroll\", () => {\r\n    if (window.scrollY >= 200 && !navColor) {\r\n      setnavColor(true);\r\n    }\r\n\r\n    if (window.scrollY < 200 && navColor) {\r\n      setnavColor(false);\r\n    }\r\n  });\r\n\r\n  const [menu, setMenu] = useState(false);\r\n\r\n  const Header = styled.nav`\r\n    width: 100%;\r\n    display: flex;\r\n    justify-content: center;\r\n    color: white;\r\n    font-weight: bold;\r\n    position: fixed;\r\n    top: 0;\r\n    left: 0;\r\n    z-index: 20;\r\n    background: ${navColor ? \"white\" : \"transparent\"};\r\n    ${navColor && \"box-shadow: rgb(238, 238, 238) 0px 1px 0px 0px\"};\r\n    color: ${navColor ? \"black\" : \"white\"};\r\n\r\n    @media only screen and (max-width: 768px) {\r\n      background: #3C9EFF;\r\n    }\r\n  `;\r\n\r\n  const NavBar = styled.div`\r\n    width: 80%;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    > div {\r\n      padding: 24px;\r\n      font-size: 24px;\r\n      color: ${navColor ? \"#3C9EFF\" : \"white\"};\r\n    }\r\n\r\n    @media only screen and (max-width: 768px) {\r\n      > div {\r\n        padding: 0 12px;\r\n        line-height: 80px;\r\n        color: white;\r\n      }\r\n    }\r\n  `;\r\n\r\n  const NavUl = styled.ul`\r\n    display: flex;\r\n    padding: 24px;\r\n    margin: 0;\r\n    > li {\r\n      list-style: none;\r\n      margin-left: 24px;\r\n      font-size: 18px;\r\n      position: relative;\r\n      cursor: pointer;\r\n\r\n      ::before {\r\n        content: \"\";\r\n        position: absolute;\r\n        width: 100%;\r\n        height: 2px;\r\n        bottom: 0;\r\n        left: 0;\r\n        background-color: #fff;\r\n        visibility: hidden;\r\n        transform: scaleX(0);\r\n        transition: all 0.2s ease-in-out 0s;\r\n      }\r\n\r\n      &:hover::before {\r\n        visibility: visible;\r\n        transform: scaleX(1);\r\n      }\r\n    }\r\n\r\n    @media only screen and (max-width: 768px) {\r\n      position: absolute;\r\n      top: 100%;\r\n      left: 0;\r\n      background: #fff;\r\n      display: ${menu ? \"flex\" : \"none\"};\r\n      align-content: flex-start;\r\n      flex-direction: column;\r\n      flex-wrap: wrap;\r\n      width: 100%;\r\n      overflow: hidden;\r\n      padding: 24px 0;\r\n\r\n      > li {\r\n        color: #000;\r\n        padding: 12px 0;\r\n        text-transform: uppercase;\r\n        width: 60px;\r\n        margin-left: 96px;\r\n        position: relative;\r\n\r\n        animation-duration: 3s;\r\n        animation-name: slidein;\r\n\r\n        &:last-child {\r\n          width: 120px;\r\n        }\r\n\r\n        ::before {\r\n          content: \"\";\r\n          position: absolute;\r\n          width: 100%;\r\n          height: 2px;\r\n          bottom: 0;\r\n          left: 0;\r\n          background-color: #000;\r\n          visibility: hidden;\r\n          transform: scaleX(0);\r\n          transition: all 0.3s ease-in-out 0s;\r\n        }\r\n\r\n        &:hover::before {\r\n          visibility: visible;\r\n          transform: scaleX(1);\r\n        }\r\n\r\n        @keyframes slidein {\r\n          from {\r\n            top: 0;\r\n          }\r\n\r\n          to {\r\n            top: 100%;\r\n          }\r\n        }\r\n      }\r\n    }\r\n  `;\r\n\r\n  return (\r\n    <Header>\r\n      <NavBar>\r\n        <div>FooDrink</div>\r\n        <MenuBtn\r\n          onClick={() => {\r\n            if (!menu) {\r\n              setMenu(true);\r\n            } else {\r\n              setMenu(false);\r\n            }\r\n          }}\r\n        >\r\n          <span />\r\n          <span />\r\n          <span />\r\n        </MenuBtn>\r\n        <NavUl>\r\n          <li>Home</li>\r\n          <li>Start</li>\r\n          <li>About</li>\r\n          <li>Contact Us</li>\r\n        </NavUl>\r\n      </NavBar>\r\n    </Header>\r\n  );\r\n}\r\n\r\nconst MenuBtn = styled.button`\r\n  display: none;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    display: inline-block;\r\n    width: 50px;\r\n    height: 50px;\r\n    padding: 0;\r\n    border: none;\r\n    background: none;\r\n    position: relative;\r\n    margin-top: 15px;\r\n    outline: none;\r\n  }\r\n\r\n  > span {\r\n    width: 30px;\r\n    height: 4px;\r\n    background: #fff;\r\n    position: absolute;\r\n    left: 50%;\r\n    transform: translateX(-50%);\r\n  }\r\n\r\n  > span::before,\r\n  span::after {\r\n    width: 30px;\r\n    height: 4px;\r\n    background: #fff;\r\n    position: absolute;\r\n    left: 0;\r\n    top: 0;\r\n    content: \"\";\r\n  }\r\n\r\n  > span::before {\r\n    top: -10px;\r\n  }\r\n\r\n  > span::after {\r\n    top: 10px;\r\n  }\r\n`;\r\n\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport mainImage from \"./img/main.jpg\";\r\n\r\nfunction Home() {\r\n  return (\r\n    <TextDiv>\r\n      <ColorOverlay>\r\n        <p>FooDrink</p>\r\n        <StartBtn>FooDrink<br />시작하기</StartBtn>\r\n      </ColorOverlay>\r\n    </TextDiv>\r\n  );\r\n}\r\n\r\nconst TextDiv = styled.div `\r\n  background-image: url(${mainImage});\r\n  background-repeat: no-repeat;\r\n  background-attachment: fixed;\r\n  background-position: center center;\r\n  background-size: 100%;\r\n  width: 100%;\r\n  height: 100vh;\r\n\r\n  @media only screen and (max-width: 768px) {\r\n    background-size: 100% 100vh;\r\n  }\r\n` \r\n\r\nconst ColorOverlay = styled.div `\r\n  background-color: rgba(0, 0, 0, .6);\r\n  width: 100%;\r\n  height: 100%;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-flow:column nowrap;\r\n  line-height: 50px;\r\n  color: #fff;\r\n  >p {\r\n    font-size: 54px;\r\n    font-weight: bold;\r\n    padding: 15px;\r\n  }\r\n`\r\n\r\nconst StartBtn = styled.button `\r\n  margin-top: 80px;\r\n  width: 200px;\r\n  height:70px;\r\n  background-color: #3C9EFF;\r\n  border: none;\r\n  border-radius: 15px;\r\n  font-size: 21px;\r\n  font-weight: bold;\r\n  color: white;\r\n  outline: none;\r\n  cursor: pointer;\r\n`\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport topImg from \"./img/about-1.jpg\"\r\n\r\nconst About = () => {\r\n  return(\r\n    <section style={sectionStyle}>\r\n      <Container>\r\n        <article style={articleStyle}>\r\n          <TitleImg src={topImg} />\r\n          <TextDiv>\r\n            <h1>FooDrink란?</h1>\r\n            <p>술과 궁합이 잘 맞는 음식을 페어링해주는</p>\r\n            <p>Food Pairing에 대한 정보를 제공 해주는 사이트입니다.</p>\r\n          </TextDiv>\r\n        </article>\r\n      </Container>\r\n    </section>\r\n  )\r\n}\r\n\r\nconst sectionStyle = {\r\n  width: \"100%\",\r\n  display: \"flex\",\r\n  justifyContent: \"center\",\r\n}\r\n\r\nconst articleStyle = {\r\n  display: \"flex\",\r\n  justifyContent: \"space-between\"\r\n}\r\n\r\nconst spacediv = {\r\n  width: \"50px\"\r\n}\r\n\r\nconst Container = styled.div `\r\n  width: 80%;\r\n  padding: 80px 0;\r\n`\r\n\r\nconst TitleImg = styled.img`\r\n  width: 48%;\r\n`\r\n\r\nconst TextDiv = styled.div`\r\n  width: 48%;\r\n  >h1 {\r\n    font-size: 32px;\r\n  }\r\n  >p {\r\n    font-size: 21px;\r\n    line-height: 50px;\r\n  }\r\n`\r\n\r\nexport default About;","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport emailjs from 'emailjs-com';\r\n\r\nfunction ContactUsForm() {\r\n\r\n  return (\r\n    <CUform>\r\n      <p>이름</p>\r\n      <InputText maxLength=\"20\"/>\r\n      <p>이메일</p>\r\n      <InputEmail />\r\n      <p>제목</p>\r\n      <InputText/>\r\n      <p>내용</p>\r\n      <TextArea />\r\n      <button>문의 하기</button>\r\n    </CUform>\r\n  );\r\n}\r\n\r\nconst CUform = styled.div`\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-flow: column nowrap;\r\n  padding: 50px 0;\r\n  >p {\r\n    width: 515px;\r\n    font-weight: bold;\r\n    font-size: 18px;\r\n  }\r\n  >button {\r\n    width: 200px;\r\n    height: 70px;\r\n    background-color: #3C9EFF;\r\n    border: none;\r\n    border-radius: 10px;\r\n    color: white;\r\n    margin-top: 10px;\r\n    font-size: 18px;\r\n    font-weight: bold;\r\n    outline: none;\r\n    cursor: pointer;\r\n  }\r\n  animation: formAnimation 1s;\r\n  animation-fill-mode: backwards;\r\n\r\n\r\n  @keyframes formAnimation {\r\n    0%  {\r\n      transform: translate(0, -150px);\r\n      opacity: 0;\r\n    }\r\n    \r\n    100% {\r\n      transform: translate(0, 0);\r\n      opacity: 1;\r\n    }\r\n  }\r\n`;\r\n\r\nconst InputText = styled.input.attrs({ type: 'text' })`\r\n  width: 500px;\r\n  padding: 15px;\r\n  margin: 20px 0;\r\n  border-radius: 10px;\r\n  border: 1px solid #858585;\r\n  outline: none;\r\n`\r\n\r\nconst InputEmail = styled.input.attrs({ type: 'email' })`\r\n  width: 500px;\r\n  padding: 15px;\r\n  margin: 20px 0;\r\n  border-radius: 10px;\r\n  border: 1px solid #858585;\r\n  outline: none;\r\n`\r\n\r\nconst TextArea = styled.textarea`\r\n  resize: none;\r\n  width: 500px;\r\n  height: 200px;\r\n  padding: 15px;\r\n  margin: 20px 0;\r\n  border-radius: 10px;\r\n  border: 1px solid #858585;\r\n  outline: none;\r\n`\r\n\r\nexport default ContactUsForm;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport ContactUsForm from \"./ContactUsForm\";\r\nimport { useState } from \"react\";\r\n\r\nfunction ContactUs() {\r\n  const [CUform, setCUform] = useState(false);\r\n\r\n  return (\r\n    <div>\r\n      <ContactUsSection\r\n        onClick={() => {\r\n          if (!CUform) {\r\n            setCUform(true);\r\n            console.log(CUform);\r\n          } else {\r\n            setCUform(false);\r\n            console.log(CUform);\r\n          }\r\n        }}\r\n      >\r\n        <p>Contact Us</p>\r\n        <DownArow />\r\n      </ContactUsSection>\r\n      {CUform && <ContactUsForm />}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst ContactUsSection = styled.section`\r\n  width: 100%;\r\n  height: 150px;\r\n  background-color: #3C9EFF;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  flex-flow: column nowrap;\r\n  color: #fff;\r\n  font-weight: bold;\r\n  font-size: 40px;\r\n  line-height: 50px;\r\n  position:relative;\r\n  z-index: 10;\r\n`;\r\n\r\nconst DownArow = styled.span`\r\n  width: 24px;\r\n  height: 24px;\r\n  margin-top: 20px;\r\n  border-left: 1px solid #fff;\r\n  border-bottom: 1px solid #fff;\r\n  -webkit-transform: rotate(-45deg);\r\n  transform: rotate(-45deg);\r\n  box-sizing: border-box;\r\n  -webkit-animation: ArowAnimation 2s infinite;\r\n  animation: ArowAnimation 2s infinite;\r\n\r\n  @-webkit-keyframes ArowAnimation {\r\n    0% {\r\n      -webkit-transform: rotate(-45deg) translate(0, 0);\r\n    }\r\n    20% {\r\n      -webkit-transform: rotate(-45deg) translate(-5px, 5px);\r\n    }\r\n    40% {\r\n      -webkit-transform: rotate(-45deg) translate(0, 0);\r\n    }\r\n  }\r\n  @keyframes ArowAnimation {\r\n    0% {\r\n      transform: rotate(-45deg) translate(0, 0);\r\n    }\r\n    20% {\r\n      transform: rotate(-45deg) translate(-5px, 5px);\r\n    }\r\n    40% {\r\n      transform: rotate(-45deg) translate(0, 0);\r\n    }\r\n  }\r\n`;\r\n\r\nexport default ContactUs;\r\n","import React, { useState } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport gitImg from \"./img/github-icon.png\"\r\n\r\n\r\nconst Footer = () => {\r\n  return(\r\n    <FooterDiv>\r\n      <a href=\"http://github.com/crewd\" target=\"blank\"><GitIcon src={gitImg}/></a>\r\n    </FooterDiv>\r\n  )\r\n}\r\n\r\nconst FooterDiv = styled.div`\r\n  width: 100%;\r\n  height: 100px;\r\n  background-color: #282c34 ;\r\n  display: flex;\r\n  justify-content: center;\r\n  align-items: center;\r\n  color: white;\r\n`\r\n\r\nconst GitIcon = styled.img `\r\n  width: 30px;\r\n  height: 30px;\r\n`\r\n\r\nexport default Footer;","import React, { useState } from \"react\";\nimport Nav from \"./Nav\";\nimport styled, { createGlobalStyle } from \"styled-components\";\nimport Home from \"./Home\";\nimport About from \"./About\";\nimport ContractUS from \"./ContactUs\";\nimport Footer from \"./Footer\";\n\n\nconst GlobalStyle = createGlobalStyle`\n\tbody {\n\t\tpadding: 0;\n\t\tmargin: 0;\n\t}\n  h2 {\n    margin: 0;\n  }\n\n  p {\n    margin: 0;\n  }\n`;\n\nfunction App() {\n  const [CUform, setCUform] = useState(false);\n  return (\n    <div>\n      <GlobalStyle />\n      <Nav />\n      <Home />\n      <About />\n      <ContractUS />\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}